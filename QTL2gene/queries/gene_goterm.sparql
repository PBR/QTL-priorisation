PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dc: <http://purl.org/dc/elements/1.1/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX uniprot: <http://purl.uniprot.org/core/>
PREFIX obo: <http://purl.obolibrary.org/obo/>
PREFIX so: <http://purl.obolibrary.org/obo/so#>
PREFIX go: <http://www.geneontology.org/formats/oboInOwl#>
PREFIX faldo: <http://biohackathon.org/resource/faldo#>
PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT
   DISTINCT
   ?sgn_gene_id AS ?gene_id
   str(?go_term) as ?go_term
   str(?go_id) AS ?go_id
   str(?go_cat) AS ?go_cat
   ?graph_ensembl
   ?graph_uniprot
WHERE {
   GRAPH ?graph_ensembl {
      ?ensembl_prot_id <http://rdf.ebi.ac.uk/terms/ensembl/CHECKSUM> ?prot.
       ?ensembl_transcript_id so:translates_to ?ensembl_prot_id ;
          so:transcribed_from/dc:identifier ?sgn_gene_id .
   }
   GRAPH ?graph_uniprot {
      ?prot uniprot:classifiedWith ?go 
   }
   GRAPH <http://purl.obolibrary.org/obo/go.owl> {
      ?go rdfs:label ?go_term ;
         go:id ?go_id ;
         go:hasOBONamespace ?go_cat .
      FILTER regex(?go, obo:GO_)
      FILTER(str(?go_cat) = "biological_process") 
   }
   FILTER(str(?sgn_gene_id) = "%s")        
}